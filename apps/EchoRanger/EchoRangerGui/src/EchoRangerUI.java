import org.szte.wsn.downloader.*;
import org.szte.wsn.downloader.StreamDownloader.RunWhenShuttingDown;
/*
 * EchoRangerUI.java
 *
 * Created on 2011.07.27., 14:09:22
 */

/**
* Copyright (c) 2011, University of Szeged
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
*
* - Redistributions of source code must retain the above copyright
* notice, this list of conditions and the following disclaimer.
* - Redistributions in binary form must reproduce the above
* copyright notice, this list of conditions and the following
* disclaimer in the documentation and/or other materials provided
* with the distribution.
* - Neither the name of University of Szeged nor the names of its
* contributors may be used to endorse or promote products derived
* from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
* FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
* COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
* STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
* OF THE POSSIBILITY OF SUCH DAMAGE.
*
*
*
* @author Csepe Zoltan
*/
public class EchoRangerUI extends javax.swing.JFrame {
    int nodeid;

    /** Creates new form EchoRangerUI */
    public EchoRangerUI() {
        initComponents();
         outText.setEditable(false);
         outText2.setEditable(false);
    }

    private long setArgument(long command, long argument){
        argument<<=8;
        return command+argument;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nodeIDtextfield = new javax.swing.JTextField();
        downloadbutton = new javax.swing.JButton();
        erasebutton = new javax.swing.JButton();
        measbutton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        outText = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nodeIDTextField2 = new javax.swing.JTextField();
        valueTextField2 = new javax.swing.JTextField();
        gainButton = new javax.swing.JButton();
        waitButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        outText2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EchoRanger");

        jLabel1.setText("NodeID");

        nodeIDtextfield.setText("ALL");

        downloadbutton.setText("Download");
        downloadbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                downloadbuttonMouseClicked(evt);
            }
        });

        erasebutton.setText("Erase");
        erasebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                erasebuttonMouseClicked(evt);
            }
        });

        measbutton.setText("MeasureNow");
        measbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                measbuttonMouseClicked(evt);
            }
        });

        outText.setColumns(20);
        outText.setRows(5);
        jScrollPane1.setViewportView(outText);

        jButton1.setText("StopDownload");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nodeIDtextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(downloadbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(erasebutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(measbutton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nodeIDtextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(downloadbutton)
                    .addComponent(jButton1)
                    .addComponent(erasebutton)
                    .addComponent(measbutton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Data commands", jPanel1);

        jLabel2.setText("NodeID");

        jLabel3.setText("Value");

        nodeIDTextField2.setText("ALL");

        valueTextField2.setText("0");

        gainButton.setText("SetGain");
        gainButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gainButtonMouseClicked(evt);
            }
        });

        waitButton.setText("SetWait");
        waitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                waitButtonMouseClicked(evt);
            }
        });

        outText2.setColumns(20);
        outText2.setRows(5);
        jScrollPane2.setViewportView(outText2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(valueTextField2)
                            .addComponent(nodeIDTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(gainButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(waitButton))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(150, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nodeIDTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(valueTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gainButton)
                    .addComponent(waitButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Set commands", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void erasebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_erasebuttonMouseClicked
        // TODO add your handling code here:
        System.setOut(new TextAreaPrintStream(outText,System.out));
        System.setErr(new TextAreaPrintStream(outText,System.out));
        String str = nodeIDtextfield.getText();
        if (str.equals("ALL")){
            nodeid=0xffff;
        }else if(str.equals("FIRST"))
        {
            nodeid=0xffff+1;
        }else{
            nodeid = Integer.parseInt(str);
        }
        StreamCommand sc = new StreamCommand("serial@/dev/ttyUSB1:iris",nodeid,0);
        //outText.setEditable(false);
        outText.append("erase\n");

    }//GEN-LAST:event_erasebuttonMouseClicked

    private void measbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_measbuttonMouseClicked
        // TODO add your handling code here:
        System.setOut(new TextAreaPrintStream(outText,System.out));
        System.setErr(new TextAreaPrintStream(outText,System.out));
        String str = nodeIDtextfield.getText();
        if (str.equals("ALL")){
            nodeid=0xffff;
        }else if(str.equals("FIRST"))
        {
            nodeid=0xffff+1;
        }else{
            nodeid = Integer.parseInt(str);
        }
        StreamCommand sc = new StreamCommand("serial@/dev/ttyUSB1:iris",nodeid,1);
       // outText.setEditable(false);
        outText.append("Measurenow\n");
    }//GEN-LAST:event_measbuttonMouseClicked

    private void gainButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gainButtonMouseClicked
        // TODO add your handling code here:
        System.setOut(new TextAreaPrintStream(outText2,System.out));
        System.setErr(new TextAreaPrintStream(outText2,System.out));
        String str = nodeIDTextField2.getText();
        String str2 = valueTextField2.getText();
        if(Integer.parseInt(str2)<0){
            outText2.append("HIBA a value nem lehet 0-nál kisebb!");
        }
        else{
           if (str.equals("ALL")){
                nodeid=0xffff;
            }else if(str.equals("FIRST")){
                nodeid=0xffff+1;
            }else{
                nodeid = Integer.parseInt(str);
            }
           long value =Long.parseLong(str2);
           long comm=setArgument(128,value);
           StreamCommand sc = new StreamCommand("serial@/dev/ttyUSB1:iris",nodeid,comm);
        }

    }//GEN-LAST:event_gainButtonMouseClicked

    private void waitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_waitButtonMouseClicked
            // TODO add your handling code here
        System.setOut(new TextAreaPrintStream(outText2,System.out));
        System.setErr(new TextAreaPrintStream(outText2,System.out));
        String str = nodeIDTextField2.getText();
        String str2 = valueTextField2.getText();
        if(Integer.parseInt(str2)<0){
            outText2.append("HIBA a value nem lehet 0-nál kisebb!");
        }
        else{
           if (str.equals("ALL")){
                nodeid=0xffff;
            }else if(str.equals("FIRST")){
                nodeid=0xffff+1;
            }else{
                nodeid = Integer.parseInt(str);
            }
           long value =Long.parseLong(str2);
           long comm=setArgument(120,value);
           StreamCommand sc = new StreamCommand("serial@/dev/ttyUSB1:iris",nodeid,comm);
        }
    }//GEN-LAST:event_waitButtonMouseClicked

    private void downloadbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_downloadbuttonMouseClicked
        // TODO add your handling code here:
        System.setOut(new TextAreaPrintStream(outText,System.out));
        System.setErr(new TextAreaPrintStream(outText,System.out));
        String str = nodeIDtextfield.getText();
        if (str.equals("ALL")){
            nodeid=0;
        }else if(str.equals("FIRST"))
        {
            nodeid=0;
        }else{
            nodeid = Integer.parseInt(str);
        }
        StreamDownloader sd = new StreamDownloader(nodeid,3,"serial@/dev/ttyUSB1:iris");
        outText.append("Download\n");

    }//GEN-LAST:event_downloadbuttonMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        System.exit(0);

    }//GEN-LAST:event_jButton1MouseClicked

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EchoRangerUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton downloadbutton;
    private javax.swing.JButton erasebutton;
    private javax.swing.JButton gainButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton measbutton;
    private javax.swing.JTextField nodeIDTextField2;
    private javax.swing.JTextField nodeIDtextfield;
    private javax.swing.JTextArea outText;
    private javax.swing.JTextArea outText2;
    private javax.swing.JTextField valueTextField2;
    private javax.swing.JButton waitButton;
    // End of variables declaration//GEN-END:variables

}
