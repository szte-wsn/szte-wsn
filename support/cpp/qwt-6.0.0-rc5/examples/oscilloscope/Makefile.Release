#############################################################################
# Makefile for building: oscilloscope
# Generated by qmake (2.01a) (Qt 4.6.3) on: Cs jún. 30 14:29:31 2011
# Project:  oscilloscope.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = @echo compiling $< && gcc
CXX           = @echo compiling $< && g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQWT_DLL -DQT_DLL -DQT_NO_DEBUG -DQT_NO_KEYWORDS -DQT_SVG_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -Wall -frtti -fexceptions -mthreads $(DEFINES)
INCPATH       = -I"c:\Qt\qt\include\QtCore" -I"c:\Qt\qt\include\QtGui" -I"c:\Qt\qt\include\QtSvg" -I"c:\Qt\qt\include" -I"..\..\src" -I"c:\Qt\qt\include\ActiveQt" -I"moc" -I"c:\Qt\qt\mkspecs\win32-g++"
LINK        =        @echo linking $@ && g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -mthreads -Wl -Wl,-subsystem,windows
LIBS        =        -L"c:\Qt\qt\lib" -lmingw32 -lqtmain -L../../lib -lqwt -lQtSvg4 -lQtGui4 -lQtCore4 
QMAKE         = c:\qt\qt\bin\qmake.exe
IDC           = c:\Qt\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = signaldata.cpp \
		plot.cpp \
		knob.cpp \
		wheelbox.cpp \
		samplingthread.cpp \
		curvedata.cpp \
		mainwindow.cpp \
		main.cpp moc\moc_plot.cpp \
		moc\moc_knob.cpp \
		moc\moc_wheelbox.cpp \
		moc\moc_samplingthread.cpp \
		moc\moc_mainwindow.cpp
OBJECTS       = release/signaldata.o \
		release/plot.o \
		release/knob.o \
		release/wheelbox.o \
		release/samplingthread.o \
		release/curvedata.o \
		release/mainwindow.o \
		release/main.o \
		release/moc_plot.o \
		release/moc_knob.o \
		release/moc_wheelbox.o \
		release/moc_samplingthread.o \
		release/moc_mainwindow.o
DIST          = 
QMAKE_TARGET  = oscilloscope
DESTDIR        = ..\..\examples\bin\ #avoid trailing-slash linebreak
TARGET         = oscilloscope.exe
DESTDIR_TARGET = ..\..\examples\bin\oscilloscope.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.oscilloscope.Release  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec c:\Qt\qt\mkspecs\win32-g++ -win32 -o Makefile.Release oscilloscope.pro

dist:
	$(ZIP) oscilloscope.zip $(SOURCES) $(DIST) ..\..\qwt.pro c:\Qt\qt\mkspecs\qconfig.pri c:\Qt\qt\mkspecs\features\qt_functions.prf c:\Qt\qt\mkspecs\features\qt_config.prf c:\Qt\qt\mkspecs\features\exclusive_builds.prf c:\Qt\qt\mkspecs\features\default_pre.prf c:\Qt\qt\mkspecs\features\win32\default_pre.prf ..\..\qwtconfig.pri ..\..\qwtbuild.pri ..\examples.pri c:\Qt\qt\mkspecs\features\release.prf c:\Qt\qt\mkspecs\features\debug_and_release.prf c:\Qt\qt\mkspecs\features\default_post.prf c:\Qt\qt\mkspecs\features\win32\default_post.prf c:\Qt\qt\mkspecs\features\build_pass.prf c:\Qt\qt\mkspecs\features\silent.prf c:\Qt\qt\mkspecs\features\warn_on.prf c:\Qt\qt\mkspecs\features\qt.prf c:\Qt\qt\mkspecs\features\win32\thread.prf c:\Qt\qt\mkspecs\features\moc.prf c:\Qt\qt\mkspecs\features\win32\rtti.prf c:\Qt\qt\mkspecs\features\win32\exceptions.prf c:\Qt\qt\mkspecs\features\win32\stl.prf c:\Qt\qt\mkspecs\features\shared.prf c:\Qt\qt\mkspecs\features\win32\windows.prf c:\Qt\qt\mkspecs\features\resources.prf c:\Qt\qt\mkspecs\features\uic.prf c:\Qt\qt\mkspecs\features\yacc.prf c:\Qt\qt\mkspecs\features\lex.prf c:\Qt\qt\mkspecs\features\include_source_dir.prf c:\Qt\qt\lib\qtmain.prl  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\signaldata.o release\plot.o release\knob.o release\wheelbox.o release\samplingthread.o release\curvedata.o release\mainwindow.o release\main.o release\moc_plot.o release\moc_knob.o release\moc_wheelbox.o release\moc_samplingthread.o release\moc_mainwindow.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc/moc_plot.cpp moc/moc_knob.cpp moc/moc_wheelbox.cpp moc/moc_samplingthread.cpp moc/moc_mainwindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc\moc_plot.cpp moc\moc_knob.cpp moc\moc_wheelbox.cpp moc\moc_samplingthread.cpp moc\moc_mainwindow.cpp
moc/moc_plot.cpp: ../../src/qwt_plot.h \
		../../src/qwt_global.h \
		../../src/qwt_text.h \
		../../src/qwt_plot_dict.h \
		../../src/qwt_plot_item.h \
		../../src/qwt_legend_itemmanager.h \
		../../src/qwt_scale_map.h \
		../../src/qwt_math.h \
		../../src/qwt_interval.h \
		../../src/qwt_system_clock.h \
		plot.h
	@echo moc plot.h && C:\Qt\qt\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 plot.h -o moc\moc_plot.cpp

moc/moc_knob.cpp: knob.h
	@echo moc knob.h && C:\Qt\qt\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 knob.h -o moc\moc_knob.cpp

moc/moc_wheelbox.cpp: wheelbox.h
	@echo moc wheelbox.h && C:\Qt\qt\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 wheelbox.h -o moc\moc_wheelbox.cpp

moc/moc_samplingthread.cpp: ../../src/qwt_sampling_thread.h \
		../../src/qwt_global.h \
		samplingthread.h
	@echo moc samplingthread.h && C:\Qt\qt\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 samplingthread.h -o moc\moc_samplingthread.cpp

moc/moc_mainwindow.cpp: mainwindow.h
	@echo moc mainwindow.h && C:\Qt\qt\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 mainwindow.h -o moc\moc_mainwindow.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 



####### Compile

release/signaldata.o: signaldata.cpp signaldata.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\signaldata.o signaldata.cpp

release/plot.o: plot.cpp plot.h \
		../../src/qwt_plot.h \
		../../src/qwt_global.h \
		../../src/qwt_text.h \
		../../src/qwt_plot_dict.h \
		../../src/qwt_plot_item.h \
		../../src/qwt_legend_itemmanager.h \
		../../src/qwt_scale_map.h \
		../../src/qwt_math.h \
		../../src/qwt_interval.h \
		../../src/qwt_system_clock.h \
		curvedata.h \
		../../src/qwt_series_data.h \
		../../src/qwt_point_3d.h \
		../../src/qwt_point_polar.h \
		signaldata.h \
		../../src/qwt_plot_grid.h \
		../../src/qwt_scale_div.h \
		../../src/qwt_plot_layout.h \
		../../src/qwt_plot_canvas.h \
		../../src/qwt_plot_marker.h \
		../../src/qwt_plot_curve.h \
		../../src/qwt_plot_seriesitem.h \
		../../src/qwt_plot_directpainter.h \
		../../src/qwt_curve_fitter.h \
		../../src/qwt_painter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\plot.o plot.cpp

release/knob.o: knob.cpp knob.h \
		../../src/qwt_math.h \
		../../src/qwt_global.h \
		../../src/qwt_knob.h \
		../../src/qwt_abstract_slider.h \
		../../src/qwt_double_range.h \
		../../src/qwt_abstract_scale.h \
		../../src/qwt_round_scale_draw.h \
		../../src/qwt_abstract_scale_draw.h \
		../../src/qwt_scale_div.h \
		../../src/qwt_interval.h \
		../../src/qwt_text.h \
		../../src/qwt_scale_engine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\knob.o knob.cpp

release/wheelbox.o: wheelbox.cpp wheelbox.h \
		../../src/qwt_wheel.h \
		../../src/qwt_global.h \
		../../src/qwt_abstract_slider.h \
		../../src/qwt_double_range.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\wheelbox.o wheelbox.cpp

release/samplingthread.o: samplingthread.cpp samplingthread.h \
		../../src/qwt_sampling_thread.h \
		../../src/qwt_global.h \
		signaldata.h \
		../../src/qwt_math.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\samplingthread.o samplingthread.cpp

release/curvedata.o: curvedata.cpp curvedata.h \
		../../src/qwt_series_data.h \
		../../src/qwt_global.h \
		../../src/qwt_interval.h \
		../../src/qwt_point_3d.h \
		../../src/qwt_point_polar.h \
		signaldata.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\curvedata.o curvedata.cpp

release/mainwindow.o: mainwindow.cpp mainwindow.h \
		plot.h \
		../../src/qwt_plot.h \
		../../src/qwt_global.h \
		../../src/qwt_text.h \
		../../src/qwt_plot_dict.h \
		../../src/qwt_plot_item.h \
		../../src/qwt_legend_itemmanager.h \
		../../src/qwt_scale_map.h \
		../../src/qwt_math.h \
		../../src/qwt_interval.h \
		../../src/qwt_system_clock.h \
		knob.h \
		wheelbox.h \
		../../src/qwt_scale_engine.h \
		../../src/qwt_scale_div.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\mainwindow.o mainwindow.cpp

release/main.o: main.cpp mainwindow.h \
		samplingthread.h \
		../../src/qwt_sampling_thread.h \
		../../src/qwt_global.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\main.o main.cpp

release/moc_plot.o: moc/moc_plot.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_plot.o moc\moc_plot.cpp

release/moc_knob.o: moc/moc_knob.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_knob.o moc\moc_knob.cpp

release/moc_wheelbox.o: moc/moc_wheelbox.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_wheelbox.o moc\moc_wheelbox.cpp

release/moc_samplingthread.o: moc/moc_samplingthread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_samplingthread.o moc\moc_samplingthread.cpp

release/moc_mainwindow.o: moc/moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_mainwindow.o moc\moc_mainwindow.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

